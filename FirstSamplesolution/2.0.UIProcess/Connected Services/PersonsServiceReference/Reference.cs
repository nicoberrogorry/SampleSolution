//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UIProcess.PersonsServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PersonsServiceReference.IPersonsService")]
    public interface IPersonsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonsService/CreatePerson", ReplyAction="http://tempuri.org/IPersonsService/CreatePersonResponse")]
        void CreatePerson(BusinessEntities.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonsService/CreatePerson", ReplyAction="http://tempuri.org/IPersonsService/CreatePersonResponse")]
        System.Threading.Tasks.Task CreatePersonAsync(BusinessEntities.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonsService/FindPersonsSummary", ReplyAction="http://tempuri.org/IPersonsService/FindPersonsSummaryResponse")]
        System.Collections.Generic.List<BusinessEntities.Person> FindPersonsSummary(BusinessEntities.FindPersonsFilter findPersonsFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonsService/FindPersonsSummary", ReplyAction="http://tempuri.org/IPersonsService/FindPersonsSummaryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessEntities.Person>> FindPersonsSummaryAsync(BusinessEntities.FindPersonsFilter findPersonsFilter);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPersonsServiceChannel : UIProcess.PersonsServiceReference.IPersonsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PersonsServiceClient : System.ServiceModel.ClientBase<UIProcess.PersonsServiceReference.IPersonsService>, UIProcess.PersonsServiceReference.IPersonsService {
        
        public PersonsServiceClient() {
        }
        
        public PersonsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PersonsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreatePerson(BusinessEntities.Person person) {
            base.Channel.CreatePerson(person);
        }
        
        public System.Threading.Tasks.Task CreatePersonAsync(BusinessEntities.Person person) {
            return base.Channel.CreatePersonAsync(person);
        }
        
        public System.Collections.Generic.List<BusinessEntities.Person> FindPersonsSummary(BusinessEntities.FindPersonsFilter findPersonsFilter) {
            return base.Channel.FindPersonsSummary(findPersonsFilter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessEntities.Person>> FindPersonsSummaryAsync(BusinessEntities.FindPersonsFilter findPersonsFilter) {
            return base.Channel.FindPersonsSummaryAsync(findPersonsFilter);
        }
    }
}
